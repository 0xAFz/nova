---
- name: add nginx GPG key
  shell: | 
    curl -s https://nginx.org/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null

- name: add nginx official repository
  shell: |
    echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/mainline/{{ ansible_facts['distribution'].lower() }} `lsb_release -cs` nginx" | sudo tee /etc/apt/sources.list.d/nginx.list
    printf "Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority: 1000\n" | sudo tee /etc/apt/preferences.d/99nginx

- name: install latest nginx
  apt:
    update_cache: yes
    name: "nginx=1.27.2-1~bookworm"
    state: present

- name: ensure nginx is enabled and running
  service:
    name: nginx
    state: started
    enabled: yes

- name: check installed nginx version
  command:
    cmd: nginx -v
  register: nginx_version
  ignore_errors: true

- name: debug nginx version
  debug:
    msg: "Installed NGINX version: {{ nginx_version.stderr }}"

- name: deploy nginx conf
  copy:
    src: files/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart nginx
  tags: nginx

- name: deploy nova nginx conf
  template:
    src: templates/nova.conf.j2
    dest: /etc/nginx/conf.d/{{ domain  }}.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload nginx
  tags: nginx
  
- name: check if certs dir exists
  stat:
    path: /etc/letsencrypt/live/{{ domain }}/
  register: certs_file

- name: get tls certificates
  shell: |
    iptables -F
    systemctl stop nginx
    certbot certonly --standalone --preferred-challenges http -d {{ domain }} --non-interactive --agree-tos -m {{ email }}
    systemctl start nginx
    systemctl restart iptables
  changed_when: false
  when: not certs_file.stat.exists
