---
- name: update cache
  apt:
    update_cache: yes

- name: install dependencies
  apt:
    update_cache: yes
    name:
      - curl
      - wget
    state: present

- name: install nginx
  apt:
    update_cache: yes
    name:
      - nginx
      - sqlite3
  when: domain != ''

- name: install x-ui
  shell: |
    if ! command -v x-ui &> /dev/null; then
      yes n | bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)
    fi
  args:
    executable: /bin/bash

- name: enable and start x-ui service
  systemd:
    name: x-ui
    enabled: yes
    state: started

- name: configure x-ui settings
  shell: |
    /usr/local/x-ui/x-ui setting -port {{ xui_port  }} -username {{ xui_username }} -password {{ xui_password }} -webBasePath / && /usr/local/x-ui/x-ui migrate
  args:
    executable: /bin/bash
  vars:
    xui_username: "{{ lookup('env', 'XUI_USERNAME') }}"
    xui_password: "{{ lookup('env', 'XUI_PASSWORD') }}"
    xui_port: "{{ lookup('env', 'XUI_PORT') }}"

- name: restart x-ui service
  systemd:
    name: x-ui
    state: restarted

- name: deploy nginx server conf
  template:
    src: templates/nginx.j2
    dest: /etc/nginx/sites-available/nova.conf
  notify:
    - reload nginx
  when: domain != ''
    
- name: create symbolic link for nova conf
  file:
    src: /etc/nginx/sites-available/nova.conf
    dest: /etc/nginx/sites-enabled/nova.conf
    state: link
  when: domain != ''

- name: test nova conf
  command: nginx -t
  register: nginx_test
  failed_when: nginx_test.rc != 0
  notify:
    - restart nginx
  when: domain != ''

- name: create SSL directory if not exists
  file:
    path: /etc/nginx/ssl/nova
    state: directory
    mode: '0755'
  when: domain != ''

- name: copy public key to server
  copy:
    src: "{{ playbook_dir }}/roles/xui/files/certs/pubkey.pem"
    dest: /etc/nginx/ssl/nova/pubkey.pem
    mode: '0644'
  when: domain != ''

- name: copy private key to server
  copy:
    src: "{{ playbook_dir }}/roles/xui/files/certs/private.key"
    dest: /etc/nginx/ssl/nova/private.key
    mode: '0600'
  when: domain != ''

- name: check if inbound already exists
  shell: |
    sqlite3 /etc/x-ui/x-ui.db "SELECT COUNT(*) FROM inbounds WHERE id = 1;"
  args:
    executable: /bin/bash
  register: inbound_check
  when: domain != ''

- name: add inbound if not already present
  script: "{{ playbook_dir }}/inbound.sh"
  args:
    executable: /bin/bash
  when: domain != '' and inbound_check.stdout is defined and inbound_check.stdout | trim == "0" 
  changed_when: inbound_output.rc == 0
  environment:
    DOMAIN: "{{ domain }}"
  register: inbound_output
  notify:
    - restart x-ui

