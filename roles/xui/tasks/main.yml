---
- name: update cache
  apt:
    update_cache: yes

- name: install basic tools
  apt:
    update_cache: yes
    name:
      - curl
      - wget
      - vim
      - htop
    state: present

- name: install web tools
  apt:
    update_cache: yes
    name:
      - nginx
      - certbot
      - python3-certbot-nginx
      - sqlite3
      - iptables-persistent
  when: domain != '' and subdomain != ''

- name: install x-ui
  shell: |
    if ! command -v x-ui &> /dev/null; then
      yes n | bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)
    fi
  args:
    executable: /bin/bash

- name: enable and start x-ui service
  systemd:
    name: x-ui
    enabled: yes
    state: started

- name: configure x-ui settings
  shell: |
    /usr/local/x-ui/x-ui setting -port {{ xui_port  }} -username {{ xui_username }} -password {{ xui_password }} -webBasePath / && /usr/local/x-ui/x-ui migrate
  args:
    executable: /bin/bash
  vars:
    xui_username: "{{ lookup('env', 'XUI_USERNAME') }}"
    xui_password: "{{ lookup('env', 'XUI_PASSWORD') }}"
    xui_port: "{{ lookup('env', 'XUI_PORT') }}"

- name: restart x-ui service
  systemd:
    name: x-ui
    state: restarted

- name: deploy nginx conf
  template:
    src: templates/nginx.j2
    dest: /etc/nginx/conf.d/{{ subdomain }}.{{ domain  }}.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload nginx
  when: domain != '' and subdomain != ''
    
- name: check if certs dir exists
  stat:
    path: /etc/letsencrypt/live/{{ domain }}/
  register: certs_file
  when: domain != '' and subdomain != ''

- name: get certificates
  shell: |
    iptables -F
    systemctl stop nginx
    certbot certonly --standalone --preferred-challenges http -d {{ subdomain }}.{{ domain }} --non-interactive --agree-tos -m {{ email }}
    systemctl start nginx
    systemctl restart iptables
  changed_when: false
  when: not certs_file.stat.exists and domain != '' and subdomain != ''

- name: check if inbound already exists
  shell: |
    sqlite3 /etc/x-ui/x-ui.db "SELECT COUNT(*) FROM inbounds WHERE id = 1;"
  args:
    executable: /bin/bash
  register: inbound_check
  when: domain != '' and subdomain != ''

- name: add inbound if not already present
  script: "{{ playbook_dir }}/inbound.sh"
  args:
    executable: /bin/bash
  when: domain != '' and subdomain != '' and inbound_check.stdout is defined and inbound_check.stdout | trim == "0" 
  register: inbound_output
  changed_when: inbound_output.rc == 0
  environment:
    DOMAIN: "{{ domain }}"
    SUBDOMAIN: "{{ subdomain  }}"
  notify:
    - restart x-ui

